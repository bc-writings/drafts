suites de goodstein
    ---> écriture puissance itérée



I) Exemples non codées


    1) Suites récurrentes - Illustration décorative - dévinette : coupe sagittale d'une coquille de nautile



    1) Ecritue binaire

    Écriture en base 2 via ecrbin via liste

Ecrbin (2n) = 2 ecrbin  (n)

Ecrbin (2n + 1) = 2 ecrbin  (n) + 1



    2) Parenthésages - Illustration décorative - dévinette : chemin de Dyck



    3) Un jeu de lettres - Illustration non décorative - dévinette : les L-systèmes

    utilisation d'une grammaire en fait

    http://accromath.uqam.ca/2013/09/l-systemes-les-equations-des-plantes/

    2 février 2019



    4) Permutation

    https://fr.wikipedia.org/wiki/Algorithme_r%C3%A9cursif#cite_ref-2

    1/2/2019

    Commençons par un exemple tiré du Bourgeois gentilhomme (Acte II Scène IV) de Molière. Le héros, Monsieur Jourdain, veut connaître toutes les manières « galantes » d'écrire un billet. De la phrase Belle Marquise, vos beaux yeux, me font mourir d'amour, il pourrait tirer Vos beaux yeux, belle Marquise, d'amour me font mourir, puis Vos beaux yeux, me font mourir, belle Marquise, d'amour, puis Vos beaux yeux, me font mourir d'amour, belle Marquise et ainsi de suite.



    5) structure récursive - Illustration un arbre

    ???



    1) La fonction 91 de MacCarthy.


    Pour tout entier n, MacCarthy a défini la fonction récursive f suivante :
    f(n) = n - 10 si n> 100
           f(f(n+11)) sinon.
    Pour tout n, cette fonction vaut n-10 si n est strictement supérieur ŕ 100. Quelle est sa valeur pour n inférieur ou égal ŕ 100 ? Pour le savoir, vous pouvez implanter cette fonction.



    1) Attention.
    Il n'est pas évident en C qu'une fonction définie par récursivité imbriquée soit correcte. Prenons comme exemple, la fonction de Morris :

    int Morris(int a, int b){
      if (a == 0)
        return 1 ;
      else
        return Morris(a-1,Morris(a,b)) ;
    }



    1) Le problčme des reines.


    Le problčme des reines consiste ŕ placer n reines sur un échiquier de taille n× n de telle sorte qu'aucune reine ne soit en prise : il ne faut donc pas plus d'une reine par ligne, par colonne et par diagonale.



    1) function Pdt(a,b,res : natural) return natural is

begin

   if a = 0

      then return res ;

      else return Pdt(a-1, b, res + b) ;

   end if ;

end Pdt ;



    1) La fonction d'Ackermann
    La suite de Fibonacci avait une croissance exponentielle. Il existe des fonctions récursives qui croissent encore plus rapidement. Le prototype est la fonction d'Ackermann. Au lieu de définir cette fonction mathématiquement, il est aussi simple d'en donner la définition récursive en Java

    static int ack(int m, int n) {

     if (m == 0)
         return n + 1;
     else
         if (n == 0)
             return ack (m - 1, 1);
         else
             return ack (m - 1, ack (m, n - 1));
    }



    1) coef binoamiaux



    1) hanoi

    (* Les tours de Hanoi, voir page X *)
    let rec hanoi n i j =
       if n > 0 then begin
         hanoi (n - 1) i (6 - (i + j));
         printf "%d -> %d\n" i j;
         hanoi (n - 1) (6 - (i + j)) j;
       end;;



    1) syracuse(n) =
      si (n = 0) ou (n = 1) alors 1
      sinon si (n mod 2 = 0) alors syracuse(n/2)
      sinon syracuse(3*n + 1)



    1) pgcd(p, q) = si p = 0 alors q
           sinon si q = 0 alors p
           sinon si q ≤ p alors pgcd(p-q, q)
           sinon pgcd(p, q-p)
